import java.awt.geom.Point2D;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.geom.Ellipse2D;

/**
 * Describes and draws an Oval based on specified values
 * 
 * Alex Arnold
 * 
 */
public class Circle extends Shape
{
    public Circle(Point2D.Double center, double radius, Color color)
    {
        super(center, radius, color);
    }
    
    /**
     * Determines whether the point passed in as a parameter is within the shapes boundaries (within a radius distance away from the center)
     *
     * @param  point    point generated by where the user clicked the mouse on the canvas
     * @return     true or false depending on if the passed-in point is within the shape
     */
    public boolean isInside(Point2D.Double point)
    {
        if (this.getCenter().distance(point) < this.getRadius())
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    
    /**
     * Draws the shape, either filled or just an outline, depending on the parameter 'filled'
     *
     * @param  filled   designates whether to use the .fill method (true) or the .draw method (false)
     */
    public void draw(Graphics2D g2, boolean filled)
    {
        g2.setColor(getColor());
        if (filled == true)
        {
            g2.fillOval((int)getCenter().getX() - (int)getRadius(), 
                        (int)getCenter().getY() - (int)getRadius(),
                        (int)getRadius() * 2, (int)getRadius() * 2);
        }
        else
        {   
            g2.drawOval((int)getCenter().getX() - (int)getRadius(), 
                        (int)getCenter().getY() - (int)getRadius(),
                        (int)getRadius() * 2, (int)getRadius() * 2);
        }
    }
}
